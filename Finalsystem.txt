import java.util.Random;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class WeatheringSystem {
    // Enum for weather types
    public enum WeatherType {
        SUNNY, RAINY
    }

    // Enum for temperature units
    public enum TemperatureUnit {
        CELSIUS, FAHRENHEIT
    }

    // Weather class
    public static class Weather {
        private WeatherType type;
        private double temperature;
        private TemperatureUnit unit;

        public Weather(WeatherType type, double temperature, TemperatureUnit unit) {
            this.type = type;
            this.temperature = temperature;
            this.unit = unit;
        }

        public WeatherType getType() {
            return type;
        }

        public double getTemperature() {
            return temperature;
        }

        public TemperatureUnit getUnit() {
            return unit;
        }

        @Override
        public String toString() {
            return "Weather: " + type + ", Temperature: " + temperature + " " + unit;
        }
    }

    private Random random = new Random();
    private LocalDate currentDate = LocalDate.of(2024, 6, 13); // today's date
    private DateTimeFormatter formatter = DateTimeFormatter.ofPattern("EEEE, MMMM dd, yyyy");

    public Weather generateWeather() {
        WeatherType type = getRandomWeatherType();
        double temperature = getRandomTemperature();
        TemperatureUnit unit = TemperatureUnit.CELSIUS; // default unit

        return new Weather(type, temperature, unit);
    }

    private WeatherType getRandomWeatherType() {
        int randomInt = random.nextInt(2);
        switch (randomInt) {
            case 0:
                return WeatherType.SUNNY;
            case 1:
                return WeatherType.RAINY;
            default:
                return WeatherType.SUNNY; // default
        }
    }

    private double getRandomTemperature() {
        return random.nextDouble() * 30.0 + 10.0; // random temperature between 10°C and 40°C
    }

    public void updateCurrentDate() {
        currentDate = currentDate.plusDays(1);
    }

    public String getCurrentDate() {
        return currentDate.format(formatter);
    }

    public static void main(String[] args) {
        WeatheringSystem weatheringSystem = new WeatheringSystem();

        for (int i = 0; i < 7; i++) {
            Weather weather = weatheringSystem.generateWeather();
            System.out.println("Current Date: " + weatheringSystem.getCurrentDate());
            System.out.println("Current Weather: " + weather.toString());
            try {
                Thread.sleep(2000); // wait for 2 seconds
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
            weatheringSystem.updateCurrentDate();
        }
    }
}
